# Generated by Django 5.1.3 on 2024-11-15 00:40

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fa_title", models.CharField(max_length=64)),
                (
                    "en_title",
                    models.CharField(
                        blank=True,
                        max_length=64,
                        null=True,
                        verbose_name="Course English Title",
                    ),
                ),
                (
                    "offering_semester",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(8),
                        ],
                        verbose_name="Offering Semester",
                    ),
                ),
                ("credit", models.IntegerField(verbose_name="Course Credit")),
                (
                    "quiz_credit",
                    models.IntegerField(default=0, verbose_name="Course Quiz Credit"),
                ),
                (
                    "unit_type",
                    models.CharField(
                        choices=[
                            ("theoretical", "Theoretical"),
                            ("practical", "Practical"),
                        ],
                        max_length=64,
                        verbose_name="Unit Type",
                    ),
                ),
                (
                    "course_type",
                    models.CharField(
                        choices=[
                            ("general", "General"),
                            ("foundational", "Foundational"),
                            ("specialized", "Specialized"),
                            ("optional", "Optional"),
                        ],
                        max_length=64,
                        verbose_name="Course Type",
                    ),
                ),
                (
                    "has_exam",
                    models.BooleanField(default=True, verbose_name="Course Has Exam?"),
                ),
                (
                    "has_project",
                    models.BooleanField(
                        default=False, verbose_name="Course Has Project?"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Link",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=64, verbose_name="Name")),
                ("address", models.URLField(verbose_name="URL Address")),
            ],
        ),
        migrations.CreateModel(
            name="Phone",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=64, verbose_name="Name")),
                (
                    "phone_number",
                    models.CharField(
                        max_length=13,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^((0|00|\\+)?98|0)?(\\d{10})$"
                            )
                        ],
                        verbose_name="Phone Number",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Place",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=64, verbose_name="Name")),
                (
                    "group",
                    models.CharField(
                        choices=[
                            ("gate", "Gate"),
                            ("restaurant", "Restaurant"),
                            ("dorm", "Dorm"),
                            ("faculty", "Faculty"),
                            ("bank", "Bank"),
                            ("office_building", "Office Building"),
                            ("other", "Other"),
                        ],
                        max_length=64,
                        verbose_name="Group",
                    ),
                ),
                ("latitude", models.FloatField(verbose_name="Latitude")),
                ("longitude", models.FloatField(verbose_name="Longitude")),
            ],
        ),
        migrations.CreateModel(
            name="Text",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=64, unique=True)),
                ("text", models.TextField()),
                ("is_button", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="TGUser",
            fields=[
                ("id", models.BigIntegerField(primary_key=True, serialize=False)),
                ("full_name", models.CharField(max_length=64)),
                ("username", models.CharField(blank=True, max_length=64, null=True)),
                ("is_banned", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="PrerequisiteCourse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="core.course",
                        verbose_name="Course",
                    ),
                ),
                (
                    "prerequisite_course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="core.course",
                        verbose_name="Prerequisite Course",
                    ),
                ),
            ],
            options={
                "unique_together": {("course", "prerequisite_course")},
            },
        ),
        migrations.AddField(
            model_name="course",
            name="prerequisite_courses",
            field=models.ManyToManyField(
                through="core.PrerequisiteCourse", to="core.course"
            ),
        ),
    ]
